# Date Regex Tutorial

This document is meant to explain the details of how a regular expression works. We will explore the inner workings of a regular 
expression using regex to generate a detailed explanation of how a date validator and its components works.  We will break down
the code and all of its assects piece by piece in order to create a complete understading of how this particular regular expression
can validate a date entry.

We will be using the following HTML tag to break down each one of its parts and components to define how they work and what part they
play in the context of the expression.

## Summary

The following evaluation of this regular expression and how each individual componet works together in order to make the regular
expression match a valid date for your code will clarify what each character, group, quantifier or alterations does on an individual 
basis to make it work as a group.

^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d$

## Table of Contents

- [Anchors](#anchors)
- [Quantifiers](#quantifiers)
- [OR Operator](#or-operator)
- [Character Classes](#character-classes)
- [Flags](#flags)
- [Grouping and Capturing](#grouping-and-capturing)
- [Bracket Expressions](#bracket-expressions)
- [Greedy and Lazy Match](#greedy-and-lazy-match)
- [Boundaries](#boundaries)
- [Back-references](#back-references)
- [Look-ahead and Look-behind](#look-ahead-and-look-behind)

## Regex Components

### Anchors

### Quantifiers

### OR Operator

### Character Classes

### Flags

### Grouping and Capturing

### Bracket Expressions

### Greedy and Lazy Match

### Boundaries

### Back-references

### Look-ahead and Look-behind

## Author

A short section about the author with a link to the author's GitHub profile (replace with your information and a link to your profile)